[{"/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/index.js":"1","/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/App.js":"2","/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/web3.js":"3","/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/scbackend.js":"4","/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/components/AddCert.js":"5","/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/components/GetCert.js":"6","/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/components/GetAllCerts.js":"7"},{"size":219,"mtime":1608193502000,"results":"8","hashOfConfig":"9"},{"size":3202,"mtime":1714390142243,"results":"10","hashOfConfig":"9"},{"size":548,"mtime":1713368532092,"results":"11","hashOfConfig":"9"},{"size":2054,"mtime":1714387421731,"results":"12","hashOfConfig":"9"},{"size":1589,"mtime":1713357778834,"results":"13","hashOfConfig":"9"},{"size":977,"mtime":1713348171460,"results":"14","hashOfConfig":"9"},{"size":1362,"mtime":1714386566465,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"16yfgou",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/index.js",[],["34","35"],"/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/App.js",["36","37","38"],"/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/web3.js",[],"/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/scbackend.js",["39"],"import web3 from \"./web3\";\nconst address = process.env.REACT_APP_SCBACKEND_ADDRESS;\nconsole.log(address);\nconst abitext = '[{\"constant\":false,\"inputs\":[{\"name\":\"certificate\",\"type\":\"string\"},{\"name\":\"expireDate\",\"type\":\"uint256\"}],\"name\":\"addCertificate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"certificate\",\"type\":\"string\"},{\"name\":\"expireDate\",\"type\":\"uint256\"}],\"name\":\"createStruct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"certificate\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"expireDate\",\"type\":\"uint256\"}],\"name\":\"sendCertificate\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"backend\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certificateIDs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllCertificates\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBackend\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getCertificateByID\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCertificatesNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]';\nconst abi = JSON.parse(abitext);\n\nexport default new web3.eth.Contract(abi, address);\n","/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/components/AddCert.js",[],"/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/components/GetCert.js",["40","41"],"import React, { useState } from \"react\";\nimport web3 from \"../web3\";\nimport scbackend from \"../scbackend\";\n\nfunction GetCert({ setMessage }) {\n  const [id, setId] = useState(0);\n  const onGetCertHandler = async () => {\n    const accounts = await web3.eth.getAccounts();\n\n    setMessage(\"Waiting on transaction success...\");\n\n    const certificate = await scbackend.methods.getCertificateByID(id).call({\n        from: accounts[0]\n    });\n\n    setMessage(\"Cert data: ID: \"+id+\" \\\n    Certificate: \"+certificate[0]+\"   \\\n    expire Date: \"+certificate[1]);\n  };\n\n  return (\n    <div>\n      <h4>Retrieve certificate from blockchain</h4>\n      <label htmlFor=\"enter-value\">Insert the ID of the certificate:</label>\n        <input\n          id=\"id-value\"\n          value={id}\n          onChange={(event) => setId(event.target.value)}\n        /><br></br>\n      <button class=\"button\" onClick={onGetCertHandler}>Get Certificate data</button>\n    </div>\n  );\n}\n\nexport default GetCert;\n","/Users/giacomogori/Documents/GitHub/Pk-IOTA/src/frontend/src/components/GetAllCerts.js",["42","43","44","45"],"import React, { useState } from \"react\";\nimport web3 from \"../web3\";\nimport scbackend from \"../scbackend\";\n\nfunction render(text) {\n  return (\n  <div>\n      {text.split(\"\\n\").map((i,key) => {\n          return <div key={key}>{i}</div>;\n      })}\n  </div>);\n}\n\nfunction GetAllCerts({ setMessage }) {\n  const onGetAllCertsHandler = async () => {\n    const accounts = await web3.eth.getAccounts();\n    var certString = \"\";\n\n    setMessage(\"Waiting on transaction success...\");\n\n    const certificates = await scbackend.methods.getAllCertificates().call({\n        from: accounts[0]\n    });\n\n    var i = 0;\n\n    for (i = 0; i < certificates.length; i++){\n      const certificate = await scbackend.methods.getCertificateByID(certificates[i]).call({\n        from: accounts[0]\n      });\n    certString+=\"Certificate data: ID: \"+certificates[i]+\" \\\n    certificate: \"+certificate[0]+\"   \\\n    expire Date: \"+certificate[1]+ \"\\n\";\n    //if the next certificate IDs is 0, from the contract code v1, it means that there are no more valid certificates\n    if (i < (certificates.length-1) && certificates[i+1] == 0)\n    {\n      break;\n    }\n   }\n   setMessage(render(certString));\n\n  };\n\n  return (\n    <div>\n      <h4>Extract all the certificates</h4>\n      <button class=\"button\" onClick={onGetAllCertsHandler}>Get All</button>\n    </div>\n  );\n}\n\nexport default GetAllCerts;\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":9},{"ruleId":"50","severity":1,"message":"54","line":4,"column":13,"nodeType":"52","messageId":"53","endLine":4,"endColumn":16},{"ruleId":"50","severity":1,"message":"55","line":51,"column":6,"nodeType":"52","messageId":"53","endLine":51,"endColumn":18},{"ruleId":"56","severity":1,"message":"57","line":7,"column":1,"nodeType":"58","endLine":7,"endColumn":52},{"ruleId":"59","severity":1,"message":"60","line":16,"column":37,"nodeType":"61","messageId":"62","endLine":17,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":17,"column":35,"nodeType":"61","messageId":"62","endLine":18,"endColumn":19},{"ruleId":"50","severity":1,"message":"63","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":31,"column":58,"nodeType":"61","messageId":"62","endLine":32,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":32,"column":35,"nodeType":"61","messageId":"62","endLine":33,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":35,"column":58,"nodeType":"66","messageId":"67","endLine":35,"endColumn":60},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'map' is defined but never used.","'subscription' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]